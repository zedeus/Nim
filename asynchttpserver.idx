Basic usage	asynchttpserver.html#basic-usage	 Basic usage	
Request	asynchttpserver.html#Request	asynchttpserver: Request	
AsyncHttpServer	asynchttpserver.html#AsyncHttpServer	asynchttpserver: AsyncHttpServer	
newAsyncHttpServer	asynchttpserver.html#newAsyncHttpServer,int	asynchttpserver: newAsyncHttpServer(reuseAddr = true; reusePort = false; maxBody = 8388608): AsyncHttpServer	
sendHeaders	asynchttpserver.html#sendHeaders,Request,HttpHeaders	asynchttpserver: sendHeaders(req: Request; headers: HttpHeaders): Future[void]	
respond	asynchttpserver.html#respond,Request,HttpCode,string	asynchttpserver: respond(req: Request; code: HttpCode; content: string; headers = EmptyHttpHeaders): Future[\n    void]	
serve	asynchttpserver.html#serve,AsyncHttpServer,Port,proc(Request),string	asynchttpserver: serve(server: AsyncHttpServer; port: Port;\n      callback: proc (request: Request): Future[void] {.closure, gcsafe.}; address = &quot;&quot;): owned(\n    Future[void])	
close	asynchttpserver.html#close,AsyncHttpServer	asynchttpserver: close(server: AsyncHttpServer)	
